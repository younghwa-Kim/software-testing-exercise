# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import car as module_0


def test_case_0():
    bool_0 = False
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(bool_0)
    assert car_0.time == 1


def test_case_1():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    car_1 = module_0.Car(car_0)
    assert car_1.odometer == 0
    assert car_1.time == 0
    with pytest.raises(Exception):
        car_0.average_speed()


@pytest.mark.xfail(strict=True)
def test_case_2():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.step()
    assert car_0.time == 1
    var_0.change_speed(var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.get_current_speed()
    assert var_0 == 0
    var_0.get_current_speed()


def test_case_4():
    int_0 = -1940
    car_0 = module_0.Car(int_0)
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.get_current_speed()
    var_1 = car_0.step()
    assert car_0.odometer == -1940
    assert car_0.time == 1
    var_2 = car_0.average_speed()
    assert var_2 == pytest.approx(-1940.0, abs=0.01, rel=0.01)


def test_case_5():
    int_0 = -24
    car_0 = module_0.Car(int_0)
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(int_0)
    assert car_0.speed == 0
    assert car_0.time == 1
    car_1 = module_0.Car()
    assert car_1.speed == 0
    assert car_1.odometer == 0
    assert car_1.time == 0
    var_1 = car_0.get_current_speed()
    assert var_1 == 0
    var_2 = car_0.step()
    assert car_0.time == 2


@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = 2858.903
    car_0 = module_0.Car(float_0)
    assert car_0.odometer == 0
    assert car_0.time == 0
    int_0 = -1
    car_1 = car_0.change_speed(int_0)
    assert car_0.speed == pytest.approx(2857.903, abs=0.01, rel=0.01)
    assert car_0.odometer == pytest.approx(2857.903, abs=0.01, rel=0.01)
    assert car_0.time == 1
    car_1.step()
